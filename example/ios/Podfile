# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'LivenessRnExample' do
  # use_frameworks! :linkage => :static
  use_frameworks!
  config = use_native_modules!

  #  pod 'LivenessCloud' ,:git => 'https://github.com/trungnguyen1791/LivenessCloudPOD.git'
  pod 'QTSCardReader' ,:git => 'https://github.com/trungnguyen1791/QTSCardReader.git'
  pod 'SVProgressHUD'
  pod 'Alamofire', '5.8.1'
  pod 'QTSLiveness', '1.0.2'
   pod 'FlashLiveness', :git => 'https://github.com/stevienguyen1988/FlashLivenessPod.git'
  # Pods for LivenessCloudSample

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :flipper_configuration => FlipperConfiguration.disabled,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'LivenessRnExampleTests' do
    inherit! :complete
    # Pods for testing
  end

  # dynamic_frameworks = ['LivenessCloud', 'KeychainSwift', 'CryptoSwift', 'SignManager']
  # pre_install do |installer|
  #   installer.pod_targets.each do |pod|
  #     if dynamic_frameworks.include?(pod.name)
  #       puts "Overriding the build_type to dynamic_framework for #{pod.name}"
  #       def pod.build_type;
  #         Pod::BuildType.dynamic_framework
  #       end
  #     end
  #   end
  # end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
      end
    end
  end
end
